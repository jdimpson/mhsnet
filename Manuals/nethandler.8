.ds S1 NETHANDLER
.ds S2 \fINethandler\fP
.ds S3 \fInethandler\fP
.ds S4 MHSnet
.ds S5 network
.ds S6 _handlers/handler
.TH \*(S1 8 "\*(S4 1.4" \^
.nh
.SH NAME
nethandler \- general purpose handler for network message delivery
.SH SYNOPSIS
.BI \*(S6
.RI [\- flags \|]
.SH DESCRIPTION
\*(S2
is an optional general purpose message
.I handler
program for network messages being delivered locally.
It will be invoked by the network routing program
to deliver messages that specify one of the aliases of
\*(S3
in their message header 
.I handler
field.
See
.IR netrouter (8).
.PP
\*(S2 will collect the data part of the message
and invoke a message delivery program to process the data,
which will be piped into its standard input.
If the message delivery program returns any exit code other than \fB0\fP,
then the message will be returned to its source,
with any data written to 
.I stderr
included as a failure reason.
The message delivery program will be invoked with several optional flags,
and six arguments.
The message delivery program name can be specified via the parameter file,
(see \s-1PARAMS\s0 below),
or defaults to
.if n `SPOOLDIR/_lib/name.sh'
.if t \f(CWSPOOLDIR/_lib/\fP\fIname\fP\f(CW.sh\fP
where
.I name
is the name that \*(S3 was invoked under.
.PP
Note that this handler will not process correctly messages containing an
.SM FTP
header,
and that it expects messages of the type generated by the program
.IR netmsg (8).
.PP
The optional message delivery program flags are:
.if n .ds tw 4
.if t .ds tw \w'\fB\-E\fP\fIreason\fPX'u
.TP "\*(tw"
.BI \-r
This message has been returned from one of its original destinations.
.TP
.BI \-A ID
This message is an acknowledgment of an earlier message,
whose unique identifier was
.SM ID.
.TP
.BI \-D sites
This message may have been duplicated at any of the sites enumerated in
.IR sites .
Each site's address is terminated with a
.I semicolon
(`;').
.TP
.BI \-E reason
.I Reason
is the contents of the
.SM ERROR
record in the message header environment field.
Usually associated with a returned message.
.TP
.BI \-F flags
Any message header flags for the handler specified at the source,
or added at intermediate sites.
Each flag is terminated with a
.I semicolon
(`;').
.TP
.BI \-I ID
This message is the result of an earlier message,
whose unique identifier was
.SM ID.
.TP
.BI \-W sites
This message has been forwarded at all of the sites enumerated in
.IR sites .
Each site's address is terminated with a
.I semicolon
(`;').
.PP
The message delivery program arguments are (in order):
.if n .ds tw 4
.if t .ds tw \w'00:\ \fIID[/part:max]\fPX'u
.TP "\*(tw"
.RI \01: \ home
The untyped address of the local site.
.TP
.RI \02: \ typed_home
The typed address of the local site.
.TP
.RI \03: \ source
The untyped source address of the message.
.TP
.RI \04: \ typed_source
The typed source address of the message.
.TP
.RI \05: \ ID
The message
.SM ID.
.TP
.RI \06: \ size
The size of the data
.SH PARAMETERS
On starting,
\*(S3 reads a file in the `_params' directory with the same name as it was invoked under.
This file can contain the following optional parameters:
.TP 4
.SM HANDLERPROG
This is the name of the message delivery program.
If this parameter is undefined,
it defaults to
.if n `SPOOLDIR/_lib/name.sh'
.if t \f(CWSPOOLDIR/_lib/\fP\fIname\fP\f(CW.sh\fP
where
.I name
is the name that \*(S3 was invoked under.
If the name does not start with a leading `/', then
.if n `SPOOLDIR/'
.if t \f(CWSPOOLDIR/\fP
will be prepended.
.SH EXAMPLES
Look at some of the example message delivery shell scripts
for a guide on how to use the arguments to deliver a message,
eg: the remote queue status handler in
.if n `SPOOLDIR/_lib/qlooker.sh'.
.if t \fI\s-1SPOOLDIR\s0\fP\f(CW/_lib/qlooker.sh\fP.
This requires \*(S3 to be invoked as
.if n `qlooker'
.if t \f(CWqlooker\fP
which is also the name that must be inserted in the message's header
.I handler
field.
There is a program to generate messages for
.if n `qlooker'
.if t \f(CWqlooker\fP
that can be examined in
.if n `SPOOLDIR/_bin/netrq'.
.if t \fI\s-1SPOOLDIR\s0\fP\f(CW/_bin/netrq\fP.
.PP
To activate a new message handler,
say `testhandler.sh' \(em which you have created in
.if t \fI\s-1SPOOLDIR\s0\fP\f(CW/_lib/testhandler.sh\fP,
.if n `SPOOLDIR/_lib/testhandler.sh',
link the handler control program to the new name:
.RS 2
.ft CW
.pt -2
.nf
cd \fI\s-1SPOOLDIR\s0\fP
ln _handlers/handler _handlers/testhandler
.fi
.pt
.ft
.RE
.PP
Then use
.IR netmsg
to generate some messages for it.
If you also wish
.I netmsg
to use default parameters for the new handler,
or you wish to
.I legalise
its use,
then you should edit the
.I handlers
file appropriately \(em see
.IR nethandlers (5).
.SH FILES
.PD 0
.TP "\w'_params/\fIhandler\fPXX'u"
_params/\fIhandler\fP
Optional parameters for \*(S3 where
.I handler
is the same name as \*(S3 was invoked under.
.PD
.SH "SEE ALSO"
.IR nethandlers (5),
.IR netparams (5),
.IR \*(S5 (7),
.IR netmsg (8),
.IR netrouter (8).
